
#define MOTOR1_1 (5)
#define MOTOR1_2 (6)
#define MOTOR2_1 (3)
#define MOTOR2_2 (9)


  
long linear_velocity = ÍÓÈäÇåÇ ;   // in m/s
long rpm = ÍÓÈäÇåÇ;     
long input ; 
char mode[10] ; 
 
int SPEED = 80 ; 

 
void setup() {
          pinMode(MOTOR1_1,OUTPUT);
pinMode(MOTOR1_2,OUTPUT);
pinMode(MOTOR2_1,OUTPUT);
pinMode(MOTOR2_2,OUTPUT);




Serial.begin(9600);
Serial.setTimeout(10);

 
 
}
 
void loop() {



   if (Serial.available()>0){
  


    input=Serial.parseInt();
    Serial.print(input);
    Serial.print("\n");
    
  


   if (Serial.readStringUntil("dis")) {  
  long distance_delay= input/linear_velocity;
  delay(distance_delay);
  stop_the_car ();
  delay(250000);

}


if (Serial.readStringUntil("ang")){
  forward_right();
  long angle_delay = input*60/rpm*360 ;
  delay(angle_delay);
  stop_the_car ();
  delay(250000); 

}




if (Serial.readStringUntil("shp")) {
 forward_right();
 long one_cycle_delay = 60/rpm ;
delay(one_cycle_delay);
forward_left();
delay(one_cycle_delay);



delay(25000);
forward();
 long twoMeters_dalay = 2/linear_velocity;
 long ortho_angle= 90*60/rpm*360;
delay(twoMeters_dalay);
stop_the_car();
right();
delay(ortho_angle);
forward();
delay(twoMeters_dalay);
stop_the_car();
right();
delay(ortho_angle);
forward();
delay(twoMeters_dalay );
stop_the_car();
right();
delay(ortho_angle);
forward();
delay(twoMeters_dalay);
stop_the_car();
delay(25000);




forward_right();
delay(one_cycle_delay);
stop_the_car();
delay(25000);


}
}


}



void forward (void)
{
  analogWrite(MOTOR1_1,SPEED);
  analogWrite(MOTOR1_2,0);
  analogWrite(MOTOR2_1,SPEED);
  analogWrite(MOTOR2_2,0);
}

void left(void)
{
  analogWrite(MOTOR1_1,0);
  analogWrite(MOTOR1_2,SPEED);
  analogWrite(MOTOR2_1,SPEED);
  analogWrite(MOTOR2_2,0);
}

void right(void)
{
  analogWrite(MOTOR1_1,SPEED);
  analogWrite(MOTOR1_2,0);
  analogWrite(MOTOR2_1,0);
  analogWrite(MOTOR2_2,SPEED);
}

void stop_the_car(){

analogWrite(MOTOR1_1,0);
  analogWrite(MOTOR1_2,0);
  analogWrite(MOTOR2_1,0);
  analogWrite(MOTOR2_2,0);
}



void forward_right(){

analogWrite(MOTOR1_1,SPEED);
  analogWrite(MOTOR1_2,0);
  analogWrite(MOTOR2_1,SPEED);
  analogWrite(MOTOR2_2,SPEED);
}


void forward_left(){

analogWrite(MOTOR1_1,0);
  analogWrite(MOTOR1_2,SPEED);
  analogWrite(MOTOR2_1,SPEED);
  analogWrite(MOTOR2_2,SPEED);
}




   